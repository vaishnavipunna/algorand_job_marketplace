import { NamedMapSchema } from '../../encoding/schema/index.js';
export interface EncodedSubsig {
    /**
     *  The public key
     */
    pk: Uint8Array;
    /**
     * The signature provided by the public key, if any
     */
    s?: Uint8Array;
}
export declare const ENCODED_SUBSIG_SCHEMA: NamedMapSchema;
export declare function encodedSubsigFromEncodingData(data: unknown): EncodedSubsig;
export declare function encodedSubsigToEncodingData(subsig: EncodedSubsig): Map<string, unknown>;
/**
 * A rough structure for the encoded multi signature transaction object.
 * Every property is labelled with its associated `MultisigMetadata` type property
 */
export interface EncodedMultisig {
    /**
     * version
     */
    v: number;
    /**
     * threshold
     */
    thr: number;
    /**
     * Subset of signatures. A threshold of `thr` signors is required.
     */
    subsig: EncodedSubsig[];
}
export declare const ENCODED_MULTISIG_SCHEMA: NamedMapSchema;
export declare function encodedMultiSigFromEncodingData(data: unknown): EncodedMultisig;
export declare function encodedMultiSigToEncodingData(msig: EncodedMultisig): Map<string, unknown>;
