import { HTTPClient, HTTPClientResponse } from '../../client.js';
import JSONRequest from '../jsonrequest.js';
import { SimulateRequest, SimulateResponse } from './models/types.js';
/**
 * Sets the default header (if not previously set) for simulating a raw
 * transaction.
 * @param headers - A headers object
 */
export declare function setSimulateTransactionsHeaders(headers?: Record<string, any>): Record<string, any>;
/**
 * Simulates signed txns.
 */
export default class SimulateRawTransactions extends JSONRequest<SimulateResponse> {
    private requestBytes;
    constructor(c: HTTPClient, request: SimulateRequest);
    path(): string;
    protected executeRequest(headers?: Record<string, string>, customOptions?: Record<string, unknown>): Promise<HTTPClientResponse>;
    prepare(response: HTTPClientResponse): SimulateResponse;
}
