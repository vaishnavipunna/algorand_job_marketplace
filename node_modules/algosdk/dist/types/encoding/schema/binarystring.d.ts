import { Schema, MsgpackEncodingData, MsgpackRawStringProvider, JSONEncodingData, PrepareJSONOptions } from '../encoding.js';
/**
 * SpecialCaseBinaryStringSchema is a schema for byte arrays which are encoded
 * as strings in msgpack and JSON.
 *
 * This schema allows lossless conversion between the in memory representation
 * and the msgpack encoded representation, but NOT between the in memory and
 * JSON encoded representations if the byte array contains invalid UTF-8
 * sequences.
 */
export declare class SpecialCaseBinaryStringSchema extends Schema {
    defaultValue(): Uint8Array;
    isDefaultValue(data: unknown): boolean;
    prepareMsgpack(data: unknown): MsgpackEncodingData;
    fromPreparedMsgpack(_encoded: MsgpackEncodingData, rawStringProvider: MsgpackRawStringProvider): Uint8Array;
    prepareJSON(data: unknown, options: PrepareJSONOptions): JSONEncodingData;
    fromPreparedJSON(encoded: JSONEncodingData): Uint8Array;
}
