"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressSchema = void 0;
const encoding_js_1 = require("../encoding.js");
const address_js_1 = require("../address.js");
/* eslint-disable class-methods-use-this */
class AddressSchema extends encoding_js_1.Schema {
    defaultValue() {
        return address_js_1.Address.zeroAddress();
    }
    isDefaultValue(data) {
        // The equals method checks if the input is an Address
        return address_js_1.Address.zeroAddress().equals(data);
    }
    prepareMsgpack(data) {
        if (data instanceof address_js_1.Address) {
            return data.publicKey;
        }
        throw new Error(`Invalid address: (${typeof data}) ${data}`);
    }
    fromPreparedMsgpack(encoded, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _rawStringProvider) {
        // The Address constructor checks that the input is a Uint8Array
        return new address_js_1.Address(encoded);
    }
    prepareJSON(data, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    _options) {
        if (data instanceof address_js_1.Address) {
            return data.toString();
        }
        throw new Error(`Invalid address: (${typeof data}) ${data}`);
    }
    fromPreparedJSON(encoded) {
        // The Address.fromString method checks that the input is a string
        return address_js_1.Address.fromString(encoded);
    }
}
exports.AddressSchema = AddressSchema;
//# sourceMappingURL=address.js.map