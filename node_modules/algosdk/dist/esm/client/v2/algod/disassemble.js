import { coerceToBytes } from '../../../encoding/binarydata.js';
import { decodeJSON } from '../../../encoding/encoding.js';
import { DisassembleResponse } from './models/types.js';
import JSONRequest from '../jsonrequest.js';
/**
 * Sets the default header (if not previously set)
 * @param headers - A headers object
 */
export function setHeaders(headers = {}) {
    let hdrs = headers;
    if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {
        hdrs = { ...headers };
        hdrs['Content-Type'] = 'text/plain';
    }
    return hdrs;
}
/**
 * Executes disassemble
 */
export default class Disassemble extends JSONRequest {
    constructor(c, source) {
        super(c);
        this.source = source;
    }
    // eslint-disable-next-line class-methods-use-this
    path() {
        return `/v2/teal/disassemble`;
    }
    executeRequest(headers, customOptions) {
        const txHeaders = setHeaders(headers);
        return this.c.post({
            relativePath: this.path(),
            data: coerceToBytes(this.source),
            query: this.query,
            requestHeaders: txHeaders,
            customOptions,
        });
    }
    // eslint-disable-next-line class-methods-use-this
    prepare(response) {
        return decodeJSON(response.getJSONText(), DisassembleResponse);
    }
}
//# sourceMappingURL=disassemble.js.map