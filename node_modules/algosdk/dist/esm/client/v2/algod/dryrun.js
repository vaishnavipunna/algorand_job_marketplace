import { decodeJSON, encodeMsgpack } from '../../../encoding/encoding.js';
import JSONRequest from '../jsonrequest.js';
import { setHeaders } from './compile.js';
import { DryrunResponse } from './models/types.js';
export default class Dryrun extends JSONRequest {
    constructor(c, dr) {
        super(c);
        this.blob = encodeMsgpack(dr);
    }
    // eslint-disable-next-line class-methods-use-this
    path() {
        return '/v2/teal/dryrun';
    }
    executeRequest(headers, customOptions) {
        const txHeaders = setHeaders(headers);
        return this.c.post({
            relativePath: this.path(),
            data: this.blob,
            requestHeaders: txHeaders,
            customOptions,
        });
    }
    // eslint-disable-next-line class-methods-use-this
    prepare(response) {
        return decodeJSON(response.getJSONText(), DryrunResponse);
    }
}
//# sourceMappingURL=dryrun.js.map