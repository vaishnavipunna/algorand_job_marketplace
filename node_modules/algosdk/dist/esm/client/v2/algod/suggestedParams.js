import JSONRequest from '../jsonrequest.js';
import { decodeJSON } from '../../../encoding/encoding.js';
import { TransactionParametersResponse } from './models/types.js';
/**
 * Returns the common needed parameters for a new transaction, in a format the transaction builder expects
 */
export default class SuggestedParamsRequest extends JSONRequest {
    /* eslint-disable class-methods-use-this */
    path() {
        return '/v2/transactions/params';
    }
    prepare(response) {
        const params = decodeJSON(response.getJSONText(), TransactionParametersResponse);
        return {
            flatFee: false,
            fee: params.fee,
            firstValid: params.lastRound,
            lastValid: params.lastRound + BigInt(1000),
            genesisID: params.genesisId,
            genesisHash: params.genesisHash,
            minFee: params.minFee,
            consensusVersion: params.consensusVersion,
        };
    }
}
//# sourceMappingURL=suggestedParams.js.map